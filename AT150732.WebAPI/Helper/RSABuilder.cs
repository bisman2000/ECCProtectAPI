using System.Security.Cryptography;

namespace AT150732.WebAPI.Helper
{
    public static class RSABuilder
    {
        // RSA .NET got bug and still unverify and issue still open
        //https://github.com/mono/mono/issues/18842 
        public static RSA LoadFromHex()
        {
            //var pub = "3082018A0282018100BAA348A501269511625318005BD864D94FD9ABE01E1DF02A38688177EA2A998DFDCFB0EDE1A7F6A6EEAB8CE4C88AB31CD101A2015C368E4EA253AADA0F13F71C7DCAC5E79EF2A00341D8BF12D665A2A8F400E9FEF76D8E7E8A20708D0084265C570046B5E4B4A98A2ED9AACC332CBCCC240D4DE9AAB2137335530E2A7FCED4E4B64AAEA21C6171C66087B5945D17ED8B47A115049BFA69AD6093E292209A999EFE2D90379676EF57D14BEC6B3AA97717E2C007747A8EEA93800C13941A56C673CDE61629EB47D2B4254269F5AD4CAA7583EAD05D4FE409EF126D40E8543BE30AC3F9FC79A390B33CCC33B261DF3F94A0726160E3AA04133FC0BBBCDBB933ED2F8CAC281A40784434B037272FBA51D7ED6FA277CBCA26B611BC66C7B4C5DA66C86E8772F3A92EEFF0A05211DE0072947E1CEE0E969B439CE620BC552D49CA0EDABA7014A2D1F48A86A9070515CDB8674DFC62A97B7A2D4F3C9D0E0E3F6933DE96229BC44B32C4D20199578A100C9528C78275409C25AA4F7238663E959BA17B1D0203010001";
            //var priv = "308206E20201000282018100BAA348A501269511625318005BD864D94FD9ABE01E1DF02A38688177EA2A998DFDCFB0EDE1A7F6A6EEAB8CE4C88AB31CD101A2015C368E4EA253AADA0F13F71C7DCAC5E79EF2A00341D8BF12D665A2A8F400E9FEF76D8E7E8A20708D0084265C570046B5E4B4A98A2ED9AACC332CBCCC240D4DE9AAB2137335530E2A7FCED4E4B64AAEA21C6171C66087B5945D17ED8B47A115049BFA69AD6093E292209A999EFE2D90379676EF57D14BEC6B3AA97717E2C007747A8EEA93800C13941A56C673CDE61629EB47D2B4254269F5AD4CAA7583EAD05D4FE409EF126D40E8543BE30AC3F9FC79A390B33CCC33B261DF3F94A0726160E3AA04133FC0BBBCDBB933ED2F8CAC281A40784434B037272FBA51D7ED6FA277CBCA26B611BC66C7B4C5DA66C86E8772F3A92EEFF0A05211DE0072947E1CEE0E969B439CE620BC552D49CA0EDABA7014A2D1F48A86A9070515CDB8674DFC62A97B7A2D4F3C9D0E0E3F6933DE96229BC44B32C4D20199578A100C9528C78275409C25AA4F7238663E959BA17B1D02030100010282018076EC1A1AC19BF2FA2BBBA49C7DE969812AA719246A2C4B5EABA8B36E543026BDDA0F1FBEC3BD81A5A6887AF340715865B12BA82DD3B31384395CB48DD373B64E5A3CFD5373ED47562BFBCEEC52DE5A01EBD0354978213FDD9367CE2F9A379A35D65DDFB080F538DE4AB1F969B9E5F4BAE2F1F34643B4CA3DEBA96B6A5B1BD07D974608F654BD2680EFFB29114B2C36F93B800163797BDB20555C85CEF4A56DE368346223796579666C7F433AA41B5D3E440675F99B2A3B8016E41B0990AAE031CC87511BB583902A5FBD031329C655C259E5E7322BD5D871CFE13DB7E6EA7610B9C1967890713F24FAC28C0FEDED86001F944B4AF197CD1BF3ED04BE5D0D03B61D4C766227DC0DA9284E60B21ED2AF91D8F8996CD44C5B2FE17B42AE753CFE8BD8392C3EFF77A8786D234868264116E03072E3BC6CCC8668A62298D7B6E8418757652A0E58C1C33F7D09B893B9DB9A68268821DE9EF4917147566F594F33104F48E0A192524DDF646460B6AFD804C5F2F8B3A4AFE6004E213AB1B2AA31AC9C450281C100CA4426181EC9D8635EB662F9BEDFC52E60E99B75F40A28243981C0F915BBFD8D0892D035BBC77BDFEF8AF1DD1AFEEE0EBD00D03D8C5E02F89DDD97C1DB7BC485FCEE5807890531ACC6D2A8250D57FEF817187519B94E6083932E3FC655E9275C0E0208223E7AFB483BF208B261A7A91DCA6A73CE475255784F0FCFAB6AD3EC6C6C8F9CA13D8109D023AE5A990E154AF5E26183E34B4B9202748ADDC8D474F304AD7F12EB00C9AF34E181D76179F18B88C521F73C6A066D2989BEB8BD18E51FBF0281C100EC384520FE063102F03366A911448152C960617A3FDD9B8A37F0E731C2EA11B88F8371EB08879ADEC8CFD27F07529846744051E0CBFE3D3A431A05D0B047465B775078FFC0F4DCC27E7FD68053D29148D07412CF4F40652007B79D0D6A2D509B9E92B7A6443E2A91713537B8DC6A03E24A8FFCA715E407A8CA50DF37C7C07C0C3962C94F8C32EFEDEE946BE62ED41F2BF9A89F06F91AC94FA8B1EF86794DC309B2C292B17DCE91D6987A1F16B96771C50D8E72E90B3E0B6F221F06E5D47ADC230281C07059A85B4F86C8B6719E979DA8037DF0840E5EB707263923DDF98FEA0BC38F542E85F63752A5BCCE27ADA32930DC97F901CD18DE8740951FE9F8735A500310A768562FF98787A60F15A55F96AD31CAC39D788D5B0B8E5897DD421C549BD5D57211A9D940C439E5A83AFBF70EB6A5BD8F79A6E5CA97DD48F279E00B7768F06C6BD16578182C24A801C04011BCE090BD41954C9B48BEC32C4846D9F7D59D0595136D179FB77F8987D3B4CB3D8ABC848A001F97FD4FC688E94BE0625B155665B6DB0281C00B23340F342AF290A2E6A9867B2BF1B5078DA5CAEFCBF1137943C082D61FD72A0E8A320AD4E21FE9352AA75019F648FBB96B76F0D46D6E519AEC552DDBC1E08D5B78CDDBB12B5A65493599D57F1E447F5C64BCA64DA449A052FCD348D8A2BE54380BCEE0E602D05AFF2D752D2027577B89EC740B24BB15A95DB0A675A8D36885E306C75B1ACF2404E1E4D99986C7B5988B32EA1C980E2D43B63E7D7EA7A584F6A6190A7597EAEF7160CB11402F09B39188EC187AE86ECA7738F2A18EA09012650281C00104E81DD4B87D44335198878BA86F71E9B3184C82114D295D891D44CC7E567B8C0F0D1AAEB5E94ABBACA3AF036F7A6AA774D5193F5BD1989BF61C501B71404830EC069B11B85576C294B1BFC629E391B91154DC0445FFDFDB33E571D3A734E656E6963FF50CB0CEC365CE014FC6D2FC343491ABBFABEE0A8E7C7091D5FC43C02DE48C8ECE7B200D1DD1AAA2E056C16309B3077AE3E67D7A9F731F72CA57C48BAF746D06133F660E56E0B486BE921E60F796F1992F87586A791A64B265294249";
            var rsa = RSA.Create(3072);
            var pubkey = rsa.ExportRSAPublicKey();
            var privkey = rsa.ExportRSAPrivateKey();
            rsa.ImportRSAPrivateKey(privkey, out _);
            rsa.ImportRSAPublicKey(pubkey, out _);
            rsa.ExportRSAPrivateKey(); // key does not esxit ??????
            return rsa;
        }
    }
}
